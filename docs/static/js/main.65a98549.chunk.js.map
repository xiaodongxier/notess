{"version":3,"sources":["SubList.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["flatten2d","arr","result","i","length","concat","SubList","props","theme","useTheme","indent","f","folder","React","useState","Array","folders","fill","opens","setOpens","files","onLoad","fresh","List","component","disablePadding","ListItem","button","style","paddingLeft","spacing","Skeleton","variant","width","height","map","index","onClick","value","handleClick","ListItemIcon","ListItemText","primary","name","Collapse","in","timeout","unmountOnExit","file","slice","search","window","location","drawerWidth","useStyles","makeStyles","createStyles","root","display","drawer","breakpoints","up","flexShrink","appBar","marginLeft","menuButton","marginRight","toolbar","mixins","drawerPaper","content","flexGrow","padding","github","marginBottom","getPath","parent","getFolderData","callback","query","getQuery","request","XMLHttpRequest","url","git","gitlab","id","encodeURI","open","token","setRequestHeader","onreadystatechange","readyState","status","JSON","parse","responseText","forEach","item","type","push","send","hljs","require","md","html","highlight","str","lang","getLanguage","__","utils","escapeHtml","mk","contentProcess","preUrl","aftUrl","array","mdExpression","start","newContent","exec","lastIndex","replace","imgExpression","vars","substring","split","pair","undefined","App","classes","mobileOpen","setMobileOpen","handleDrawerToggle","handleFileClick","console","log","setTitle","setContent","setCurrentFile","currentFile","title","freshCount","setFreshCount","githubRepo","setGithubRepo","githubToken","setGithubToken","className","color","alignItems","Typography","noWrap","Divider","CssBaseline","AppBar","position","Toolbar","IconButton","aria-label","edge","Hidden","smUp","implementation","Drawer","anchor","direction","onClose","paper","ModalProps","keepMounted","xsDown","dangerouslySetInnerHTML","__html","render","href","noValidate","autoComplete","TextField","onChange","e","target","label","Button","document","toString","fontSize","use","throwOnError","errorColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","rel","crossOrigin","defer","src","getElementById"],"mappings":"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","file":"static/js/main.65a98549.chunk.js","sourcesContent":["import React from 'react'\nimport FolderIcon from '@material-ui/icons/Folder'\nimport FileIcon from '@material-ui/icons/InsertDriveFile'\nimport MdIcon from '@material-ui/icons/Description';\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Collapse from '@material-ui/core/Collapse'\nimport ExpandLess from '@material-ui/icons/ExpandLess'\nimport ExpandMore from '@material-ui/icons/ExpandMore'\nimport Skeleton from '@material-ui/lab/Skeleton'\nimport { useTheme } from '@material-ui/core/styles'\n\nimport { Folder, File } from './template'\n\ninterface Props {\n    indent?: number\n    folder: Folder\n    fresh: () => void\n    onClick: (file: File) => void\n    onLoad?: (files: File[]) => void\n}\n\nfunction flatten2d(arr: JSX.Element[][]) {\n    let result = [] as JSX.Element[]\n    for (var i = 0; i < arr.length; i++) {\n        result = result.concat(arr[i])\n    }\n    return result\n}\n\nfunction isMarkdown(name: string) {\n    if (name.length >= 3 && name.slice(name.length - 3, name.length) === '.md') {\n        return true\n    } else {\n        return false\n    }\n}\n\nexport default function SubList(props: Props) {\n    const theme = useTheme()\n    const indent = props.indent ? props.indent : 2\n    const f = props.folder\n\n    const [opens, setOpens] = React.useState(\n        Array(typeof (f.folders) === 'function' ? 0 : f.folders.length).fill(false) as boolean[]\n    )\n\n    function handleClick(index: number) {\n        setOpens(opens.map((value, i) => index === i ? !value : value))\n    }\n\n    if (typeof (f.folders) === 'function') {\n        f.folders(f, (folders, files) => {\n            f.folders = folders\n            f.files = files\n            setOpens(Array(f.folders.length).fill(false))\n            if (props.onLoad) {\n                props.onLoad(files)\n            }\n            props.fresh()\n        })\n        return (\n            <List component=\"div\" disablePadding>\n                <ListItem button style={{ paddingLeft: theme.spacing(indent) }}>\n                    <Skeleton variant=\"text\" width={300} height={30} />\n                </ListItem>\n            </List>\n        )\n    } else {\n        return (\n            <List component=\"div\" disablePadding>\n                {\n                    flatten2d(f.folders.map((folder, index) => [\n                        <ListItem button\n                            onClick={() => handleClick(index)}\n                            key={index}\n                            style={{ paddingLeft: theme.spacing(indent) }}>\n                            <ListItemIcon>\n                                <FolderIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={folder.name} />\n                            {opens[index] ? <ExpandLess /> : <ExpandMore />}\n                        </ListItem>,\n                        <Collapse key={f.folders.length + index} in={opens[index]} timeout=\"auto\" unmountOnExit>\n                            <SubList indent={indent + 4} folder={folder} fresh={props.fresh} onClick={props.onClick} />\n                        </Collapse>\n                    ]))\n                }\n                {\n                    f.files.map((file, index) => (\n                        <ListItem button\n                            onClick={() => {props.onClick(file)}}\n                            key={2 * f.folders.length + index}\n                            style={{ paddingLeft: theme.spacing(indent) }}>\n                            <ListItemIcon>\n                                {isMarkdown(file.name) ? <MdIcon /> : <FileIcon />}\n                            </ListItemIcon>\n                            <ListItemText primary={file.name} />\n                        </ListItem>\n                    ))\n                }\n            </List>\n        )\n    }\n}","import React from 'react'\nimport { useState } from 'react'\nimport AppBar from '@material-ui/core/AppBar'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Divider from '@material-ui/core/Divider'\nimport Drawer from '@material-ui/core/Drawer'\nimport Hidden from '@material-ui/core/Hidden'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport { makeStyles, useTheme, Theme, createStyles } from '@material-ui/core/styles'\n\nimport './App.css'\n\nimport SubList from './SubList'\n\nimport { Folder, File } from './template'\n\n// ---------------------------------------------------\nconst search = window.location.search\n// 请在这里更改你需要的 url 参数\n// const search = '?git=github&github=typoverflow/note'\n// const search = '?git=github&github=xiaodongxier/BeijngNotes'\n// ---------------------------------------------------\n\nconst drawerWidth = 300\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            display: 'flex',\n        },\n        drawer: {\n            [theme.breakpoints.up('sm')]: {\n                width: drawerWidth,\n                flexShrink: 0,\n            },\n        },\n        appBar: {\n            [theme.breakpoints.up('sm')]: {\n                width: `calc(100% - ${drawerWidth}px)`,\n                marginLeft: drawerWidth,\n            },\n        },\n        menuButton: {\n            marginRight: theme.spacing(2),\n            [theme.breakpoints.up('sm')]: {\n                display: 'none',\n            },\n        },\n        toolbar: theme.mixins.toolbar,\n        drawerPaper: {\n            width: drawerWidth,\n        },\n        content: {\n            flexGrow: 1,\n            padding: theme.spacing(3)\n        },\n        github: {\n            '& > *': {\n                marginRight: theme.spacing(2),\n                marginBottom: theme.spacing(1),\n            },\n        }\n    }),\n)\n\nfunction isMarkdown(name: string) {\n    if (name.length >= 3 && name.slice(name.length - 3, name.length) === '.md') {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunction getPath(folder: Folder): string {\n    if (folder.parent) {\n        return getPath(folder.parent) + folder.name + '/'\n    } else {\n        return ''\n    }\n}\n\nfunction getFolderData(folder: Folder, callback: (folders: Folder[], files: File[]) => void) {\n    const query = getQuery()\n    const folders = [] as Folder[]\n    const files = [] as File[]\n    const request = new XMLHttpRequest()\n    let url = ''\n    if (query.git === 'gitlab') {\n        url = `https://${query.gitlab}/api/v4/projects/${query.id}/repository/tree?per_page=1000&ref=master&path=${encodeURI(getPath(folder))}`\n    } else {\n        url = `https://api.github.com/repos/${query.github}/contents/${encodeURI(getPath(folder))}`\n    }\n    request.open('GET', url)\n    if (query.token) {\n        request.setRequestHeader('Authorization', 'token ' + query.token)\n    }\n    request.onreadystatechange = function () {\n        if (request.readyState === 4 && request.status === 200) {\n            const tree = JSON.parse(request.responseText)\n            tree.forEach((item: any) => {\n                if (query.git === 'gitlab' ? item.type === 'tree' : item.type === 'dir') {\n                    folders.push({\n                        name: item.name,\n                        parent: folder,\n                        folders: getFolderData,\n                        files: []\n                    })\n                } else if (query.git === 'gitlab' ? item.type === 'blob' : item.type === 'file') {\n                    files.push({\n                        name: item.name,\n                        parent: folder\n                    })\n                }\n            })\n            callback(folders, files)\n        }\n    }\n    request.send(null)\n}\n\nconst folder = {\n    name: 'root',\n    parent: null,\n    folders: getFolderData,\n    files: []\n} as Folder\n\nconst hljs = require('highlight.js')\nconst md = require('markdown-it')({\n    html: true,\n    highlight: function (str: string, lang: string) {\n        if (lang && hljs.getLanguage(lang)) {\n            try {\n                return '<pre class=\"hljs\"><code>' +\n                    hljs.highlight(lang, str, true).value +\n                    '</code></pre>'\n            } catch (__) { }\n        }\n        return '<pre class=\"hljs\"><code>' + md.utils.escapeHtml(str) + '</code></pre>'\n    }\n})\nconst mk = require('@iktakahiro/markdown-it-katex')\nmd.use(mk, {\n    throwOnError: false,\n    errorColor: \"#cc0000\",\n})\n\n\nfunction contentProcess(content: string, file: File | null): string {\n    if (file) {\n        const query = getQuery()\n        let preUrl = ''\n        let aftUrl = ''\n        if (query.git === 'gitlab') {\n            preUrl = `https://${query.gitlab}/api/v4/projects/${query.id}/repository/files/`\n            aftUrl = '/raw?ref=master'\n        } else {\n            preUrl = `https://raw.githubusercontent.com/${query.github}/master/`\n            aftUrl = ''\n        }\n\n        // Markdown Image\n        const mdExpression = /!\\[([\\u4e00-\\u9fa5a-z0-9-_/. ]*)\\]\\((\\.\\/)?([\\u4e00-\\u9fa5a-z0-9-_/. ]*)\\)/g\n        let start = 0\n        let newContent = ''\n        let array\n        while ((array = mdExpression.exec(content)) !== null) {\n            newContent += content.slice(start, mdExpression.lastIndex - array[0].length)\n            newContent += `![${array[1]}](${preUrl}${query.git === 'gitlab' ?\n                encodeURI(getPath(file.parent) + array[3]).replace(/\\//g, '%2F') :\n                encodeURI(getPath(file.parent) + array[3])\n                }${aftUrl})`\n            start = mdExpression.lastIndex\n        }\n        newContent += content.slice(start, content.length)\n        content = newContent\n\n        // Html Image\n        const imgExpression = /<img +src=\"([\\u4e00-\\u9fa5a-z0-9-_/. ]*)\"([^>]*)>/g\n        start = 0\n        newContent = ''\n        while ((array = imgExpression.exec(content)) !== null) {\n            newContent += content.slice(start, imgExpression.lastIndex - array[0].length)\n            newContent += `<img src=\"${preUrl}${query.git === 'gitlab' ?\n                encodeURI(getPath(file.parent) + array[1]).replace(/\\//g, '%2F') :\n                encodeURI(getPath(file.parent) + array[1])\n                }${aftUrl}\"${array[2]}>`\n            start = imgExpression.lastIndex\n        }\n        newContent += content.slice(start, content.length)\n        content = newContent\n    }\n    return content\n}\n\ninterface Query {\n    [key: string]: string\n}\n\nfunction getQuery(): Query {\n    const result = {} as Query\n    if (search.length > 1) {\n        const query = search.substring(1)\n        const vars = query.split(\"&\")\n        for (var i = 0; i < vars.length; i++) {\n            var pair = vars[i].split(\"=\")\n            result[pair[0]] = pair[1]\n        }\n    }\n    if (result.git !== 'github' && result.git !== 'gitlab' && result.git !== undefined) {\n        result.git = 'github'\n    }\n    if (result.git === 'gitlab') {\n        if (!result.gitlab) {\n            result.gitlab = 'git.nju.edu.cn'\n            result.id = '2047'\n        }\n    } else {\n        if (!result.github) {\n            // 预览\n            result.github = 'xiaodongxier/BeijngNotes'\n        }\n    }\n    return result\n}\n\nfunction GetHostUrl() {\n    return document.location.toString().split(\"?\")[0]\n}\n\n\nexport default function App() {\n    const classes = useStyles()\n    const theme = useTheme()\n    const [mobileOpen, setMobileOpen] = React.useState(false)\n\n    function handleDrawerToggle() {\n        setMobileOpen(!mobileOpen)\n    }\n\n    function handleFileClick(file: File) {\n        setMobileOpen(false)\n        \n        const query = getQuery()\n        let preUrl = ''\n        let aftUrl = ''\n        if (query.git === 'gitlab') {\n            preUrl = `https://${query.gitlab}/api/v4/projects/${query.id}/repository/files/`\n            aftUrl = '/raw?ref=master'\n        } else {\n            preUrl = `https://raw.githubusercontent.com/${query.github}/master/`\n            aftUrl = ''\n        }\n        const url = `${preUrl}${query.git === 'gitlab' ?\n            encodeURI(getPath(file.parent) + file.name).replace(/\\//g, '%2F') :\n            encodeURI(getPath(file.parent) + file.name)\n        }${aftUrl}`\n        if (!isMarkdown(file.name)) {\n            console.log(window.location.search)\n            window.open(url, '_blank')\n            return\n        }\n        setTitle(file.name)\n        setContent('# 加载中...\\n\\n如果您访问的是 GitHub 上的笔记, 也许是因为国内访问 GitHub 速度不佳, 可以自行寻找方式解决.')\n        const request = new XMLHttpRequest()\n        request.open('GET', url)\n        request.onreadystatechange = function () {\n            if (request.readyState === 4) {\n                if (request.status === 200) {\n                    setCurrentFile(file)\n                    setContent(request.responseText)\n                } else {\n                    setContent('# 加载失败...\\n\\n如果您访问的是 GitHub 上的笔记, 也许是因为国内访问 GitHub 速度不佳, 可以自行寻找方式解决.')\n                }\n            }\n        }\n        request.send(null)\n    }\n\n    // Load README.md\n    function handleLoad(files: File[]) {\n        files.forEach((file) => {\n            if (file.name === 'README.md') {\n                handleFileClick(file)\n            }\n        })\n    }\n\n    const [currentFile, setCurrentFile] = useState(null as File | null)\n    // const [title, setTitle] = useState('GitNotes | OrangeX4\\'s Notes')\n    const [title, setTitle] = useState('小东西儿的笔记')\n    const [content, setContent] = useState('')\n\n    const [freshCount, setFreshCount] = useState(0)\n    const fresh = () => setFreshCount(freshCount + 1)\n\n\n    const [githubRepo, setGithubRepo] = useState('xiaodongxier/BeijngNotes')\n    const [githubToken, setGithubToken] = useState('')\n    const [gitlabHost, setGitlabHost] = useState('git.nju.edu.cn')\n    const [gitlabId, setGitlabId] = useState('2047')\n\n\n    const drawer = (\n        <div>\n            <div className={classes.toolbar} style={{ color: '#303030', display: 'flex', alignItems: 'center', paddingLeft: 16 }}>\n                <MenuIcon style={{ marginRight: 30 }} />\n                <Typography variant=\"h6\" noWrap>\n                    目录\n                </Typography>\n            </div>\n            <Divider />\n            {getQuery().git ? (\n                <SubList folder={folder} fresh={fresh} onClick={handleFileClick} onLoad={handleLoad} />\n            ) : (\n                null\n            )}\n        </div>\n    )\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <AppBar position=\"fixed\" className={classes.appBar} color='default'>\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        edge=\"start\"\n                        onClick={handleDrawerToggle}\n                        className={classes.menuButton}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" noWrap>\n                        {title}\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n            <nav className={classes.drawer} aria-label=\"mailbox folders\">\n                {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n                <Hidden smUp implementation=\"css\">\n                    <Drawer\n                        variant=\"temporary\"\n                        anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n                        open={mobileOpen}\n                        onClose={handleDrawerToggle}\n                        classes={{\n                            paper: classes.drawerPaper,\n                        }}\n                        ModalProps={{\n                            keepMounted: true, // Better open performance on mobile.\n                        }}\n                    >\n                        {drawer}\n                    </Drawer>\n                </Hidden>\n                <Hidden xsDown implementation=\"css\">\n                    <Drawer\n                        classes={{\n                            paper: classes.drawerPaper,\n                        }}\n                        variant=\"permanent\"\n                        open\n                    >\n                        {drawer}\n                    </Drawer>\n                </Hidden>\n            </nav>\n            {/* <main className={classes.content} style={{width: '100%'}}> */}\n            <main className={classes.content}>\n                <div className={classes.toolbar} />\n                {getQuery().git ? (\n                    <div dangerouslySetInnerHTML={{ __html: md.render(contentProcess(content, currentFile)) }} />\n                ) : (\n                    <div>\n                        {/* <h1>这是什么?</h1>\n                        <p>这是一个由 <b>OrangeX4</b> 开发的<b>笔记浏览应用</b>, 用于浏览以 <b>Markdown</b> 书写的, 存放在 <b>GitLab 或 GitHub</b> 上的笔记.</p>\n                        <p>优点: <b>数学公式支持和移动端适配.</b></p>\n                        <a href=\"https://github.com/OrangeX4/GitNotes\">GitHub 地址</a> */}\n\n                        <h3>我的的笔记</h3>\n                        <h2><a href=\"./?git=github\">GitHub Notes</a></h2>\n                        {/* <h3>推荐的其他笔记</h3> */}\n                        {/* <h2><a href=\"./?git=github&github=typoverflow/note\">Typoverflow's Notes</a></h2> */}\n                        {/* <h2><a href=\"./?git=github&github=fengdu78/Coursera-ML-AndrewNg-Notes\">Coursera-ML-AndrewNg-Notes</a></h2> */}\n                        {/* <h2><a href=\"./?git=github&github=fengdu78/Data-Science-Notes\">Data-Science-Notes</a></h2> */}\n\n                        <h1>GitHub Repo</h1>\n                        <form className={classes.github} noValidate autoComplete=\"off\">\n                            <TextField id=\"standard-basic\" value={githubRepo} onChange={(e) => setGithubRepo(e.target.value)} label=\"Repo\" />\n                            <TextField id=\"standard-basic\" value={githubToken} onChange={(e) => setGithubToken(e.target.value)} label=\"Token\" />\n                            <Button variant=\"outlined\"\n                                color=\"primary\"\n                                onClick={() => { window.location.href = `${GetHostUrl()}?git=github&github=${githubRepo}${githubToken === '' ? '' : '&token=' + githubToken}` }}\n                                style={{ height: 50, width: 100, fontSize: 16 }}>浏览</Button>\n                        </form>\n                        <p>GitHub 对于 API 访问有一定的限制, 超过次数便需要 Token 才能继续浏览.</p>\n                        <p>详见 <a href=\"https://docs.github.com/cn/github/authenticating-to-github/creating-a-personal-access-token\">创建 Token</a>.</p>\n{/* \n                        <h1>GitLab Repo</h1>\n                        <form className={classes.github} noValidate autoComplete=\"off\">\n                            <TextField id=\"standard-basic\" value={gitlabHost} onChange={(e) => setGitlabHost(e.target.value)} label=\"Host\" />\n                            <TextField id=\"standard-basic\" value={gitlabId} onChange={(e) => setGitlabId(e.target.value)} label=\"Id\" />\n                            <Button variant=\"outlined\"\n                                color=\"primary\"\n                                onClick={() => { window.location.href = `${GetHostUrl()}?git=gitlab&gitlab=${gitlabHost}&id=${gitlabId}` }}\n                                style={{ height: 50, width: 100, fontSize: 16 }}>浏览</Button>\n                        </form>\n                        <p>Host 是 GitLab 所在的域名, 如 \"gitlab.com\" 和 \"git.nju.edu.cn\".</p>\n                        <p>Id 是你要浏览的 GitLab 项目的 Id, 可以在项目页面上找到.</p> */}\n                    </div>\n                )}\n            </main>\n        </div>\n    )\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n        <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.11.1/katex.min.css\"></link>\n        <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/10.7.2/styles/atom-one-dark.min.css\" />\n        <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/katex@0.11.1/dist/contrib/copy-tex.min.css\" crossOrigin=\"anonymous\"></link>\n        <script defer src=\"https://cdn.jsdelivr.net/npm/katex@0.11.1/dist/contrib/copy-tex.min.js\" crossOrigin=\"anonymous\"></script>\n        <script defer src=\"https://cdn.jsdelivr.net/npm/katex@0.11.1/dist/contrib/mhchem.min.js\" crossOrigin=\"anonymous\"></script>\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}